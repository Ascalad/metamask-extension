version: 2.1

executors:
  node-browsers-small:
    docker:
      - image: cimg/node:22.13-browsers
    resource_class: small
    environment:
      NODE_OPTIONS: --max_old_space_size=2048
  node-browsers-medium:
    docker:
      - image: cimg/node:22.13-browsers
    resource_class: medium
    environment:
      NODE_OPTIONS: --max_old_space_size=3072
  node-linux-medium:
    machine:
      image: ubuntu-2404:2024.05.1
    resource_class: medium #// linux medium: 2 CPUs, 7.5 GB RAM, 10 credits/min
    environment:
      NODE_OPTIONS: --max_old_space_size=6144
  node-browsers-medium-plus:
    docker:
      - image: cimg/node:22.13-browsers
    resource_class: medium+
    environment:
      NODE_OPTIONS: --max_old_space_size=4096
  playwright:
    docker:
      - image: mcr.microsoft.com/playwright:v1.44.1-focal
    resource_class: medium

orbs:
  gh: circleci/github-cli@2.0
  codecov: codecov/codecov@3.2.2
  slack: circleci/slack@4.12.5

rc_branch_only: &rc_branch_only
  filters:
    branches:
      only:
        - /^Version-v(\d+)[.](\d+)[.](\d+)/

main_master_rc_only: &main_master_rc_only
  filters:
    branches:
      only:
        - main
        - master
        - /^Version-v(\d+)[.](\d+)[.](\d+)/

aliases:
  # Shallow Git Clone
  - &shallow-git-clone-and-enable-vnc
    name: Shallow Git Clone
    command: |
      #!/bin/bash
      set -e
      set -u
      set -o pipefail

      # Set up SSH access
      # This SSH key is the current github.com SSH key as of June 2023, but it will need to be changed whenever github changes their key (probably every few years)
      GITHUB_SSH_KEY="AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl"
      mkdir -p ~/.ssh
      echo github.com ssh-ed25519 $GITHUB_SSH_KEY >> ~/.ssh/known_hosts

      git clone --depth 1 --no-checkout "$CIRCLE_REPOSITORY_URL" .
      git fetch --depth 1 origin "$CIRCLE_SHA1"

      if [ -n "${CIRCLE_TAG-}" ]; then
        echo "Checkout tag '${CIRCLE_TAG}' at commit '${CIRCLE_SHA1}'"
        git checkout "$CIRCLE_TAG"
        git reset --hard "$CIRCLE_SHA1"
      else
        echo "Checkout branch '${CIRCLE_BRANCH}' at commit '${CIRCLE_SHA1}'"
        git checkout -B "$CIRCLE_BRANCH" "$CIRCLE_SHA1"
      fi

      # Piggyback on this alias to enable VNC connections
      # The if statement will only be true on node-browsers executors
      if [ "${SHELL}" != "/bin/bash" ]; then
        cat ${HOME}/project/.circleci/scripts/enable-vnc.sh >> ~/.bashrc
      fi

workflows:
  test_and_release:
    when:
      not:
        or:
          - matches:
              pattern: /^l10n_crowdin_action$/
              value: << pipeline.git.branch >>
          - matches:
              pattern: /^rerun-from-failed.*/
              value: << pipeline.schedule.name >>
    jobs:
      - prep-deps
      - get-changed-files-with-git-diff:
          filters:
            branches:
              ignore:
                - master
          requires:
            - prep-deps
      - prep-build-test:
          requires:
            - prep-deps
      - test-e2e-chrome:
          requires:
            - prep-build-test
            - get-changed-files-with-git-diff

  rerun-from-failed:
    when:
      matches:
        pattern: /^rerun-from-failed.*/
        value: << pipeline.schedule.name >>
    jobs:
      - prep-deps
      - rerun-workflows-from-failed:
          filters:
            branches:
              only: main
          requires:
            - prep-deps


jobs:
  prep-deps:
    executor: node-browsers-medium
    steps:
      - run: *shallow-git-clone-and-enable-vnc
      - run: sudo corepack enable
      - run:
          name: Save Yarn version
          command: yarn --version > /tmp/YARN_VERSION
      - restore_cache:
          keys:
            # First try to get the specific cache for the checksum of the yarn.lock file.
            # This cache key lookup will fail if the lock file is modified and a cache
            # has not yet been persisted for the new checksum.
            - dependency-cache-{{ checksum "/tmp/YARN_VERSION" }}-{{ checksum "yarn.lock" }}
            # To prevent having to do a full install of every node_module when
            # dependencies change, restore from the last known cache of any
            # branch/checksum with the same Yarn version, the install step will remove
            # cached items that are no longer required and add the new dependencies, and
            # the cache will be persisted.
            - dependency-cache-{{ checksum "/tmp/YARN_VERSION" }}-
      - gh/install
      - run:
          name: Install dependencies
          command: yarn --immutable
      - save_cache:
          key: dependency-cache-{{ checksum "/tmp/YARN_VERSION" }}-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build-artifacts

  # This job is used for the e2e quality gate.
  # It must be run before any job which uses the run-all.js script.
  # The job is skipped in main, master or RC branches.
  get-changed-files-with-git-diff:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone-and-enable-vnc
      - run: sudo corepack enable
      - attach_workspace:
          at: .
      - run:
          name: Get changed files with git diff
          command: yarn git-diff-default-branch
      - persist_to_workspace:
          root: .
          paths:
            - changed-files


  prep-build-test:
    executor: node-linux-medium
    steps:
      - run: *shallow-git-clone-and-enable-vnc
      - run: corepack enable
      - attach_workspace:
          at: .
      - run:
          name: Build extension for testing
          command: yarn build:test
      - run:
          name: Move test build to 'dist-test' to avoid conflict with production build
          command: mv ./dist ./dist-test
      - run:
          name: Move test zips to 'builds-test' to avoid conflict with production build
          command: mv ./builds ./builds-test
      - store_artifacts:
          path: builds-test
      - persist_to_workspace:
          root: .
          paths:
            - dist-test
            - builds-test


  test-e2e-chrome:
    executor: node-browsers-medium-plus
    parallelism: 20
    steps:
      - run: *shallow-git-clone-and-enable-vnc
      - run: sudo corepack enable
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test ./builds
      - run:
          name: test:e2e:chrome
          command: .circleci/scripts/test-run-e2e.sh yarn test:e2e:chrome
          no_output_timeout: 5m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e


  all-tests-pass:
    executor: node-browsers-small
    steps:
      - run:
          name: All Tests Passed
          command: echo 'whew - everything passed!'
