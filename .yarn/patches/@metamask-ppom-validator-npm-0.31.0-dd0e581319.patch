diff --git a/dist/ppom-controller.js b/dist/ppom-controller.js
index 9cf1502efabec00b25ad381bf2001200ccc9f34f..ef290ca382724206c18c297be2c050fb3be76341 100644
--- a/dist/ppom-controller.js
+++ b/dist/ppom-controller.js
@@ -177,6 +177,18 @@ class PPOMController extends base_controller_1.BaseControllerV2 {
     }
 }
 exports.PPOMController = PPOMController;
+const getCurrentNetwork = (networkControllerState) => {
+    for (const network of Object.values(networkControllerState.networkConfigurationsByChainId)) {
+      for (const rpcEndpoint of network.rpcEndpoints) {
+        if (
+          rpcEndpoint.networkClientId ===
+          networkControllerState.selectedNetworkClientId
+        ) {
+          return {...rpcEndpoint, ...network}
+        }
+      }
+    }
+  };
 _PPOMController_ppom = new WeakMap(), _PPOMController_provider = new WeakMap(), _PPOMController_storage = new WeakMap(), _PPOMController_ppomMutex = new WeakMap(), _PPOMController_ppomProvider = new WeakMap(), _PPOMController_cdnBaseUrl = new WeakMap(), _PPOMController_providerRequestLimit = new WeakMap(), _PPOMController_providerRequests = new WeakMap(), _PPOMController_chainId = new WeakMap(), _PPOMController_securityAlertsEnabled = new WeakMap(), _PPOMController_providerRequestsCount = new WeakMap(), _PPOMController_blockaidPublicKey = new WeakMap(), _PPOMController_ppomInitialised = new WeakMap(), _PPOMController_nativeCrypto = new WeakMap(), _PPOMController_instances = new WeakSet(), _PPOMController_initialisePPOM = 
 /*
  * Initialise PPOM loading wasm file.
@@ -203,7 +215,7 @@ async function _PPOMController_initialisePPOM() {
         console.error(`Error in deleting files: ${error.message}`);
     });
 }, _PPOMController_onNetworkChange = function _PPOMController_onNetworkChange(networkControllerState) {
-    const id = (0, util_1.addHexPrefix)(networkControllerState.providerConfig.chainId);
+    const id = (0, util_1.addHexPrefix)(getCurrentNetwork(networkControllerState).chainId);
     if (id === __classPrivateFieldGet(this, _PPOMController_chainId, "f")) {
         return;
     }
